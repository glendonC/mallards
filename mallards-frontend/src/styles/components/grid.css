html, body {
    overflow: hidden;
    height: 100%;
}

.main-container {
    overflow: hidden;
    height: 100%;
}

.grid-container {
    display: grid;
    gap: 15px;
    padding: 15px;
    margin-top: 10px;
    height: calc(100vh - var(--nav-height) - 130px);
}

.grid-item {
    background-color: var(--tileColor, rgba(255, 255, 255, 0.8));
    border: 2px solid var(--borderColor, #ddd);
    border-radius: 8px;
    padding: 0;
    font-size: 1.25rem;
    cursor: grab;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    position: relative;
}

.grid-item-header {
    padding: 12px 16px;
    border-bottom: 1px solid var(--borderColor, #ddd);
    text-align: left;
    height: 48px;
}

.grid-item-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    padding: 24px;
    position: relative;
    overflow: hidden;
}

/* Base grid item sizes for different layouts */
.grid-container[style*="repeat(3, 1fr)"] .grid-item {
    height: 400px !important;
}

.grid-container[style*="repeat(2, 1fr)"] .grid-item,
.grid-container[style*="1fr"] .grid-item {
    height: 400px !important;
}

/* Chart specific styles */
.grid-item[data-type="chart"] .grid-item-content {
    padding: 16px;
    height: calc(100% - 48px); /* Subtract header height */
    display: flex;
    flex-direction: column;
}

.chart-container {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Make sure the canvas fills the container but doesn't overflow */
.chart-container canvas {
    max-width: 100%;
    max-height: 100%;
}

/* Adjust chart sizes to match */
.grid-container[style*="repeat(3, 1fr)"] .grid-item[data-type="chart"],
.grid-container[style*="repeat(2, 1fr)"] .grid-item[data-type="chart"],
.grid-container[style*="1fr"] .grid-item[data-type="chart"] {
    height: 400px !important;
}

/* Keep metric cards consistent */
.grid-item[data-type="metric"] {
    height: 400px !important;
}

/* Dragging visual feedback */
.grid-item:active {
    cursor: grabbing;
}

.grid-item.dragging {
    opacity: 0.5;
    transform: scale(1.1);
}

.grid-item.over {
    border: 2px dashed #555;
    background-color: rgba(200, 200, 200, 0.5);
}

.grid-item.focused {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90vw;
    height: 80vh;
    max-width: 1400px;
    margin: 0;
    z-index: 1000;
    background-color: var(--tileColor, #FFFFFF);
    border-radius: 12px;
    padding: 24px;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
    overflow: auto;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.grid-item.focused .grid-item-content {
    height: 100%;
    padding: 20px;
}

.grid-item.hidden {
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s ease;
}

.grid-container.focus-mode::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 999;
}

.grid-container.focus-mode {
    position: relative;
}

/* Add smooth transitions for focus mode */
.grid-item {
    transition: all 0.3s ease-in-out;
}

.focus-mode .grid-item:not(.focused) {
    opacity: 0.5;
    filter: blur(2px);
}